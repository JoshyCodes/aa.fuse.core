/**
 * Type		:	Mixin
 * Group	:	Arrows
 * Desc		:	Adding arrows to things is repetitive. These mixins are here to help!
 *
 * @since 1.0.0
 * @author CreativeFuse
 */

/**
 * The action arrow appears on various buttons and cards. We are
 * building it into a mixin to make it easier to use.
 *
 * @param $arrow-start-x-position	- The `X` starting background position for our arrow
 * @param $size						- The size of the arrow
 *  
 * @since 1.0.0
 */

//
// @example - Usage
// 
// .test{
//
// 		@include action-arrow( 4px ) 
//
// }
//
// @example - Result
//
// .test{
//
// 		background-image: url( ... );
// 		background-position: 4px center;
//		background-repeat: no-repeat;
//		background-size: 32px 32px;
// }
//
// .test:hover{
//
// 		background-position: calc( 4px + 4px ) center;
// }



@mixin action-arrow( $x-position: 50%, $size: 32px, $y-position-offset: 0px, $color: c( grayscale, white ) ){
	
	// This value will be used to determine the offset animation
	// When the arrow is hovered
	$hover-offset: 4px;
	
	/**
	 * We are directly embedding our arrow SVG here so we don't have to make a 
	 * HTTP call to get the icon. Note that we are encoding it, but NOT base 64
	 * encoding it. Base 64 performs poorly in this scenario.
	 *
	 * @note Tool used to encode: https://yoksel.github.io/url-encoder/
	 */
	
	// Set our arrow and allow its color to be changed by interpolating a color variable
	$arrow :  url( "data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 15 15' enable-background='new 0 0 15 15' xml:space='preserve' fill='#{$color}'%3E%3Cpath stroke='%236D6E70' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' d='M84,0.8L84,0.8 M-351.8,0.8 L-351.8,0.8'/%3E%3Cpath d='M7.6,0.6L5.1,3.2l2.6,2.4H0v3.6h7.7l-2.6,2.4l2.5,2.7L15,7.5L7.6,0.6z M6.7,11.8l4-3.7H1.2V6.8h9.5l-4-3.7l0.9-0.9l5.7,5.3 l-5.7,5.3L6.7,11.8z'/%3E%3C/svg%3E%0A" );


	background-image: #{$arrow};
	
	// Y Position will usually be centered, which is why we set it to 50% by default but we allow the positioning
	// to be altered by an offset variable if desired for special case scenarios
	background-position: $x-position calc( 50% + #{$y-position-offset};
	background-repeat:  no-repeat;
	background-size: $size $size;
	
	// Include a hover animation only on devices that might have a mouse
	@include breakpoint( m ){

		&:hover{
			
			// We are simply offsetting the the arrow position a predetermined amount base on the
			// initial position of the arrow, this will give a nice little hover effect.

			background-position: calc( #{$x-position} + #{$hover-offset} ) calc( 50% + #{$y-position-offset} );

		}

	}




}