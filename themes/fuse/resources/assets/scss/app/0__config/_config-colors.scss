/**
 * Type     :   Config
 * Group    :   Colors
 *
 * @since 1.0.0
 * @author CreativeFuse
 */


// ----------------------------------------
// The $colors map is where you define all
// of your brand colors.
// 
// This should be the ONLY place color hex values are defined in your project
// ----------------------------------------

$colors : (
    
    // Primary
    viridian    : #00838F,
    mimosa      : #FFC107,
    ingot       : #757575,

    // Secondary Palette
    capri       : #00EDDD,
    chartreuse  : #b0e545,
    persimmon   : #FA5445,
    fuchsia     : #D90DE0

);

// ----------------------------------------
// Define the color scale map to use with our project.
// 
// Our color scale map is relative to the $colors defined above.
// We do not decare arbitrary hex values, but rather, keep each
// branded color relative to its base value, and either lighten(),
// or darken() accordingly
// ----------------------------------------

$color_config: (
    
    viridian: (  

   
        light   :   #4FB3BF,
        base     :   map-get( $colors, viridian ),
        dark     :   #005662,
        
    ),

    mimosa: (  

   
        light    :   #FFDA68,
        base     :   map-get( $colors, mimosa ),
        dark     :   #C79100,
        
    ),

    ingot: (  

   
        light    :   #D3D2D1,
        base     :   map-get( $colors, ingot ),
        dark     :   #494949,
        
    ),

    small-business: (  

        light20  :   lighten( map-get( $colors, capri ), 20% ),
        light15  :   lighten( map-get( $colors, capri ), 15% ),
        light10  :   lighten( map-get( $colors, capri ), 10% ),
        light5   :   lighten( map-get( $colors, capri ), 5% ),

        base    :   map-get( $colors, capri ),

        dark5    :   darken( map-get( $colors, capri ), 5% ),
        dark10   :   darken( map-get( $colors, capri ), 10% ),
        dark15   :   darken( map-get( $colors, capri ), 15% ),
        dark20   :   darken( map-get( $colors, capri ), 20% ),
        
    ),

    high-tech: (  

        light20  :   lighten( map-get( $colors, chartreuse ), 20% ),
        light15  :   lighten( map-get( $colors, chartreuse ), 15% ),
        light10  :   lighten( map-get( $colors, chartreuse ), 10% ),
        light5   :   lighten( map-get( $colors, chartreuse ), 5% ),

        base    :   map-get( $colors, chartreuse ),

        dark5    :   darken( map-get( $colors, chartreuse ), 5% ),
        dark10   :   darken( map-get( $colors, chartreuse ), 10% ),
        dark15   :   darken( map-get( $colors, chartreuse ), 15% ),
        dark20   :   darken( map-get( $colors, chartreuse ), 20% ),
        
    ),

    research: (  

        light20  :   lighten( map-get( $colors, persimmon ), 20% ),
        light15  :   lighten( map-get( $colors, persimmon ), 15% ),
        light10  :   lighten( map-get( $colors, persimmon ), 10% ),
        light5   :   lighten( map-get( $colors, persimmon ), 5% ),

        base    :   map-get( $colors, persimmon ),

        dark5    :   darken( map-get( $colors, persimmon ), 5% ),
        dark10   :   darken( map-get( $colors, persimmon ), 10% ),
        dark15   :   darken( map-get( $colors, persimmon ), 15% ),
        dark20   :   darken( map-get( $colors, persimmon ), 20% ),
        
    ),

    community: (  

        light20  :   lighten( map-get( $colors, fuchsia ), 20% ),
        light15  :   lighten( map-get( $colors, fuchsia ), 15% ),
        light10  :   lighten( map-get( $colors, fuchsia ), 10% ),
        light5   :   lighten( map-get( $colors, fuchsia ), 5% ),

        base    :   map-get( $colors, fuchsia ),

        dark5    :   darken( map-get( $colors, fuchsia ), 5% ),
        dark10   :   darken( map-get( $colors, fuchsia ), 10% ),
        dark15   :   darken( map-get( $colors, fuchsia ), 15% ),
        dark20   :   darken( map-get( $colors, fuchsia ), 20% ),
        
    ),

    // ----------------------------------------
    // A SASSY Grayscale courtesy of the awesome people at Sparkbox.
    // Useful for any design system!
    //
    // https://seesparkbox.com/foundry/sassy_grayscale
    // ----------------------------------------

    grayscale: (

        white   : #ffffff,
        99      : #fcfcfc,
        98      : #f3f3f3,
        95      : #EDEDED,
        90      : #E5E5E5, 
        85      : #D9D9D9,
        80      : #CCCCCC,
        75      : #C0C0C0, 
        70      : #B0B0B0,
        60      : #999999,
        50      : #808080,
        45      : #727272,
        40      : #696969, 
        30      : #4D4D4D,
        20      : #363636,
        15      : #262626,
        10      : #171717,
        5       : #0a0a0a,
        black   : #000000,

    )
);